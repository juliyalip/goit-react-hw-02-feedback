{"version":3,"sources":["components/Section.js","components/FeedbackOptions.js","components/Notification.js","components/Statistics.js","App.js","index.js"],"names":["Section","title","children","FeedbackOptions","clickGood","type","onClick","id","Notification","message","Statistics","prop","total","positivePercentage","good","neutral","bad","App","state","hangleAdd","ev","target","setState","prevState","countTotalFeedback","Object","values","reduce","acc","value","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPASeA,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,6BAAKD,IACJC,MCYQC,EAhBS,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACzB,OACE,gCACE,wBAAQC,KAAK,SAASC,QAASF,EAAWG,GAAG,OAA7C,kBAGA,wBAAQF,KAAK,SAASC,QAASF,EAAWG,GAAG,UAA7C,qBAGA,wBAAQF,KAAK,SAASC,QAASF,EAAWG,GAAG,MAA7C,qBCLSC,EAJM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,6BAAKA,KCiBCC,EAdI,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBACjC,OACE,mCAAGD,EAAQ,EAAO,+BAChB,wCAAWD,EAAKG,QAChB,2CAAcH,EAAKI,WACnB,uCAAUJ,EAAKK,OACf,yCAAYJ,EAAZ,OACA,qDAAwBC,EAAxB,UACS,cAAC,EAAD,CAAcJ,QAAQ,yBCNhBQ,E,4MACnBC,MAAQ,CACNJ,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPG,UAAY,SAAAC,GACW,SAAjBA,EAAGC,OAAOd,GACZ,EAAKe,UAAS,SAAAC,GAAS,MAAK,CAAET,KAAMS,EAAUT,KAAO,MAC3B,YAAjBM,EAAGC,OAAOd,GACnB,EAAKe,UAAS,SAAAC,GAAS,MAAK,CAC1BR,QAASQ,EAAUR,QAAU,MAEL,QAAjBK,EAAGC,OAAOd,IACnB,EAAKe,UAAS,SAAAC,GAAS,MAAK,CAAEP,IAAKO,EAAUP,IAAM,O,EAIvDQ,mBAAqB,WACnB,OAAOC,OAAOC,OAAO,EAAKR,OAAOS,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,IAAO,I,EAGvEC,gCAAkC,WAIhC,OAHiBC,KAAKC,MACnB,IAAM,EAAKd,MAAMJ,KAAQ,EAAKU,uB,uDAMjC,OACE,qCACE,cAAC,EAAD,CAASvB,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBG,UAAW6B,KAAKd,cAGnC,cAAC,EAAD,CACER,KAAMsB,KAAKf,MACXN,MAAOqB,KAAKT,qBACZX,mBAAoBoB,KAAKH,2C,GAxCFI,aCDjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d08caf6e.chunk.js","sourcesContent":["const Section = ({ title, children }) => {\n  return (\n    <section>\n      <h1>{title}</h1>\n      {children}\n    </section>\n  );\n};\n\nexport default Section;\n","const FeedbackOptions = ({ clickGood }) => {\n  return (\n    <div>\n      <button type=\"button\" onClick={clickGood} id=\"good\">\n        good\n      </button>\n      <button type=\"button\" onClick={clickGood} id=\"neutral\">\n        neutral\n      </button>\n      <button type=\"button\" onClick={clickGood} id=\"bad\">\n        bad\n      </button>\n    </div>\n  );\n};\n\nexport default FeedbackOptions;\n","const Notification = ({ message }) => {\n  return <h2>{message}</h2>;\n};\n\nexport default Notification;\n","import React from 'react'\nimport  Notification from './Notification'\n\n\nconst Statistics = ({ prop, total, positivePercentage }) => {\n  return (\n    <>{total > 0 ? (  <ul>\n      <li>Good: {prop.good}</li>\n      <li>Neutral: {prop.neutral}</li>\n      <li>Bad: {prop.bad}</li>\n      <li>Total: {total} </li>\n      <li>Positive feedback: {positivePercentage}%</li>\n      </ul>) : <Notification message=\"No feedback given\" /> }\n  \n      </>\n  );\n};\n\nexport default Statistics;\n","import { Component } from 'react';\n\nimport Section from './components/Section';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Statistics from './components/Statistics';\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  hangleAdd = ev => {\n    if (ev.target.id === 'good') {\n      this.setState(prevState => ({ good: prevState.good + 1 }));\n    } else if (ev.target.id === 'neutral') {\n      this.setState(prevState => ({\n        neutral: prevState.neutral + 1,\n      }));\n    } else if (ev.target.id === 'bad') {\n      this.setState(prevState => ({ bad: prevState.bad + 1 }));\n    }\n  };\n\n  countTotalFeedback = () => {\n    return Object.values(this.state).reduce((acc, value) => acc + value, 0);\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const positive = Math.round(\n      (100 * this.state.good) / this.countTotalFeedback(),\n    );\n    return positive;\n  };\n\n  render() {\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions clickGood={this.hangleAdd} />\n         </Section>\n\n        <Statistics\n          prop={this.state}\n          total={this.countTotalFeedback()}\n          positivePercentage={this.countPositiveFeedbackPercentage()}\n        />\n\n\n\n        \n      </>\n    );\n  }\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}